<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BBrowse.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="BTNChangePass.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>